version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: task_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-task_management}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-task_management}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - task_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task_app
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-task_management}
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-3100}
    ports:
      - "${PORT:-3100}:${PORT:-3100}"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - task_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  task_network:
    driver: bridge